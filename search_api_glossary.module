<?php
/**
 * @file
 * Search api glossary module file.
 */

use Drupal\Core\Form\FormStateInterface;
//use Drupal\Core\Form\ConfigFormBase;

/**
 * Add search_api_glossary settings to Search API Index configuration.
 * Implements hook_form_FORM_ID_alter()
 * @see \Drupal\search_api\Form\IndexFieldsForm method buildForm at /modules/search_api/src/Form/IndexFieldsForm.php
 */
function search_api_glossary_form_search_api_index_fields_alter(&$form, FormStateInterface $form_state) {
  $entity = $form_state->getFormObject()->getEntity();
  $field_instances = $entity->get('fieldInstances');
  $datasource_ids = array();

  $config = \Drupal::config('search_api_glossary.settings');

  foreach ($field_instances as $field_instance) {
    //Set the allowed fields
    $field_name = $field_instance->getFieldIdentifier();
    $field_label = $field_instance->getLabel();
    $field_type = $field_instance->getType();
    $datasource_id = $field_instance->getDatasourceId();
    $locked = $field_instance->isTypeLocked();

    //if (substr($field_name, -3) != '_az') {
    //TODO: figure out a better way to identify
    // Allow only integers, text or strings to be used for glossary.
    if (!$locked && ($field_type == 'integer' || $field_type == 'text' || $field_type == 'string')) {
      $form[$datasource_id]['fields'][$field_name]['glossary_az'] = array(
        '#type' => 'checkbox',
        '#title' => t('Enable'),
        '#default_value' => $config->get($field_name),
      );

      // Array to identify which header(s) to alter.
      $datasource_ids[$datasource_id] = $datasource_id;
    }
    //}
  }

  // Add glossary header to each fieldset.
  foreach ($datasource_ids as $datasource_id_unique) {
    $form[$datasource_id_unique]['#header'][] = t('Glossary AZ');
  }

  // Add a custom submit handler to save the array of types back to the config file.
  $form['actions']['submit']['#submit'][] = 'search_api_glossary_search_api_index_fields_submit';
}


function search_api_glossary_search_api_index_fields_submit($form, FormStateInterface $form_state) {
  $values = $form_state->getValues();
  $fields = $values['fields'];

  $config = \Drupal::configFactory()->getEditable('search_api_glossary.settings');

  foreach ($fields as $field_name => $field_values) {
    $field_type = $field_values['type'];

    if (isset($field_values['glossary_az']) && ($field_type == 'integer' || $field_type == 'text' || $field_type == 'string')) {
      $config->set($field_name, $field_values['glossary_az'])->save();
    }
    else {
      $config->clear($field_name)->save();
    }
  }
}
