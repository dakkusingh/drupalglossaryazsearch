<?php
/**
 * @file
 * Search api glossary module file.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Add search_api_glossary settings to Search API Index configuration.
 *
 * Implements hook_form_FORM_ID_alter().
 */
function search_api_glossary_form_search_api_index_fields_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  $entity = $form_state->getFormObject()->getEntity();
  $field_instances = $entity->get('fieldInstances');
  $datasource_ids = array();

  foreach ($field_instances as $field_instance) {
    //Set the allowed fields
    $field_name = $field_instance->getFieldIdentifier();
    $field_label = $field_instance->getLabel();
    $field_type = $field_instance->getType();
    $datasource_id = $field_instance->getDatasourceId();
    $locked = $field_instance->isTypeLocked();

    if (substr($field_name, -3) != '_az') {
      //TODO: figure out a better way to identify
      // Allow only integers, text or strings to be used for glossary.
      if (!$locked && ($field_type == 'integer' || $field_type == 'text' || $field_type == 'string')) {
        $form[$datasource_id]['fields'][$field_name]['glossary_az'] = array(
          '#type' => 'checkbox',
          '#title' => t('Enable Glossary AZ'),
        );

        // Array to identify which header(s) to alter.
        $datasource_ids[$datasource_id] = $datasource_id;
      }
    }
  }

  // Add glossary header to each fieldset.
  foreach ($datasource_ids as $datasource_id_unique) {
    $form[$datasource_id_unique]['#header'][] = t('Glossary AZ');
  }
}
